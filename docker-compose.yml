version: "3"

services:
  scj2000-web:
    build: 
      context: scj2000-web
      dockerfile: Dockerfile
    container_name: scj2000-web
    restart: unless-stopped
    env_file: .env
    networks:
      - scj2000-app-network
    volumes:
      - ./scj2000-web:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "24678:24678"

  scj2000-web-static:
    image: nginx
    container_name: scj2000-web-static
    restart: unless-stopped
    env_file: .env
    networks:
      - scj2000-app-network
    volumes:
      - ./scj2000-web/.output/public:/usr/share/nginx/html:ro
    ports:
      - "80:80"

  scj2000-cms:
    image: directus/directus:10
    container_name: scj2000-cms
    volumes:
      - ./scj2000-db/uploads:/directus/uploads
      - ./scj2000-db/extensions:/directus/extensions
      # - ./scj2000-db/database:/directus/database
    networks:
      - scj2000-app-network
    depends_on:
      #- cache
      - scj2000-db
    env_file: .env
    environment:
      CORS_ENABLED: 'true'
      CORS_ORIGIN: '*'
    ports:
      - 8055:8055

  scj2000-db:
    image: postgres
    container_name: scj2000-db
    restart: always
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d scj2000 -U scj2000"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - scj2000-app-network
    volumes:
      - ./scj2000-db/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
 
  scj2000-redis:
    image: redis
    container_name: scj2000-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - scj2000-app-network

  scj2000-adminer:
    image: adminer
    container_name: scj2000-adminer
    restart: always
    env_file: .env
    networks:
      - scj2000-app-network
    ports:
      - 8080:8080

networks:
  scj2000-app-network:
    driver: bridge
